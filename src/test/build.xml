<?xml version="1.0" encoding="UTF-8"?>

<project name="test" default="test" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <property file="../build/local.build.properties"/>
  <property file="../build/build.properties"/>

  <property name="junit.src.dir" value="junit"/>
  <property name="htmlunit.src.dir" value="htmlunit"/>
  <property name="yanel.home.dir" location="../../"/>
  <property name="test.data.dir" value="${yanel.home.dir}/local/test/data"/>
  <property name="test.results.dir" value="${test.data.dir}/test-results"/>
  <property name="test.results.archive.dir" value="${test.data.dir}/test-results-archive"/>  
  <property name="conf.dir" value="${yanel.home.dir}/conf"/>
  <property name="local.conf.dir" value="${yanel.home.dir}/${local.config.dir}"/>
  <property name="build.dir" value="${yanel.home.dir}/build"/>
  <property name="yanel.build.dir" value="${build.dir}/classes"/>
  <property name="junit.build.dir" value="${build.dir}/test/junit"/>
  <property name="htmlunit.build.dir" value="${build.dir}/test/htmlunit"/>
  <property name="webapp.classes.dir" value="${build.dir}/webapps/${servlet.context.prefix}/WEB-INF/classes"/>
  <property name="webapp.lib.dir" value="${build.dir}/webapps/${servlet.context.prefix}/WEB-INF/lib"/>

  <property name="yanel.source.version" value="${yanel.version}-r${yanel.revision}"/>
  
  <target name="init" depends="dependencies">
    <path id="classpath">
      <pathelement location="${webapp.classes.dir}"/>
      <pathelement path="${maven2.cp}"/>
      <pathelement location="${junit.build.dir}"/>
      <pathelement location="${htmlunit.build.dir}"/>
      <fileset dir="${webapp.lib.dir}">
        <include name="**.jar"/>
      </fileset>
    </path>
    <!-- <property name="cp" refid="classpath"/>
    <echo>classpath: ${cp}</echo> -->
  </target>
  
  <target name="dependencies" description="Dependencies">
    <!-- INFO: http://maven.apache.org/ant-tasks.html -->
    <artifact:remoteRepository id="wyona.remote.repository" url="${maven.url}"/>

    <artifact:dependencies pathId="maven2.classpath" filesetId="maven2.fileset">
      <remoteRepository refid="wyona.remote.repository"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-codec" version="1.3"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-collections" version="3.2"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-configuration" version="1.1"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-httpclient" version="3.0.1"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-io" version="1.2"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-lang" version="2.1"/>
      <dependency groupId="apache-jakarta-commons" artifactId="apache-jakarta-commons-logging" version="1.0.4"/>
      <dependency groupId="htmlunit" artifactId="htmlunit" version="1.10"/>
      <dependency groupId="jaxen" artifactId="jaxen" version="1.1-beta-10"/>
      <dependency groupId="rhino" artifactId="rhino" version="1.6R2"/>
      <dependency groupId="nekohtml" artifactId="nekohtml" version="0.9.5"/>
    </artifact:dependencies>

    <property name="maven2.cp" refid="maven2.classpath"/>
  </target>
 
  <target name="build" depends="init" description="Build tests">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${junit.build.dir}"/>
    <mkdir dir="${htmlunit.build.dir}"/>
    <copy todir="${test.data.dir}">
      <fileset dir="${yanel.home.dir}/src/realms/test/yanel/data"/>
    </copy>

    <javac srcdir="${junit.src.dir}" destdir="${junit.build.dir}">
      <classpath refid="classpath" />
    </javac>
    <javac srcdir="${htmlunit.src.dir}" destdir="${htmlunit.build.dir}">
      <classpath refid="classpath" />
    </javac>
    <antcall target="build-resources"/>
  </target>

  <target name="build-resources" depends="init" description="Build tests of resources">
    <condition property="local.yanel.config.exists">
      <available file="${local.conf.dir}/local.yanel.xml" type="file"/>
    </condition>
    <antcall target="generate-resources-test-build-from-default"/>
    <antcall target="generate-resources-test-build-from-local"/>
    <path id="yanel.home.dir.ref">
      <pathelement location="${yanel.home.dir}"/>
    </path>
    <pathconvert targetos="unix" property="yanel.home.dir.forward.slashes" refid="yanel.home.dir.ref">
    </pathconvert>
    <replace file="${build.dir}/test-resources.xml" value="${yanel.home.dir.forward.slashes}">
      <replacetoken>@YANEL_SRC_DIR@</replacetoken>
    </replace>

    <antcall target="copy-properties"/>
    <ant antfile="${build.dir}/test-resources.xml" target="build-test-resources" inheritRefs="true"/>
  </target>
  
  <target name="generate-resources-test-build-from-default" depends="init" unless="local.yanel.config.exists">
    <xslt in="${conf.dir}/resource-types.xml" out="${build.dir}/test-resources.xml" style="test-resources.xsl" force="false"/>
  </target>

  <target name="generate-resources-test-build-from-local" depends="init" if="local.yanel.config.exists">
    <xslt in="${local.conf.dir}/local.resource-types.xml" out="${build.dir}/test-resources.xml" style="test-resources.xsl" force="true"/>
  </target>
  
  <target name="copy-properties">
    <copy todir="${junit.build.dir}">
      <fileset dir="${junit.src.dir}">
        <include name="*.xml"/>
      </fileset>
    </copy>
    <copy todir="${htmlunit.build.dir}">
      <fileset dir="${htmlunit.src.dir}">
        <include name="*.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="clean" description="Clean the build">
    <echo>Clean ${junit.build.dir}</echo>
    <delete dir="${junit.build.dir}"/>
    <echo>Clean ${htmlunit.build.dir}</echo>
    <delete dir="${htmlunit.build.dir}"/>
    <echo>Remove ${build.dir}/test-resources.xml</echo>
    <delete file="${build.dir}/test-resources.xml"/>
  </target>

  <target name="test" depends="build" description="Run all tests">
    <echo>Delete old Test-Results</echo>
    <mkdir dir="${test.results.dir}"/>
    <delete>
      <fileset dir="${test.results.dir}"/>
    </delete>
    <tstamp>
      <format property="test.exec.time" pattern="yyyy-MM-dd-HH-mm-ss"/>
    </tstamp>
    <echo>Running the tests at ${test.exec.time}</echo>
    <echo>NOTE: Running the tests might take a while. Thanks for your patience ...</echo>
    <antcall target="result"/>
  </target>
  
  <target name="archive-tests">
    <mkdir dir="${test.results.archive.dir}"/>
    <junitreport todir="${test.results.archive.dir}"  tofile="${test.exec.time}-tests.xml">
      <fileset dir="${test.results.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
    </junitreport>
  </target>
  
  <target name="junit" depends="build" description="Run junit tests">
    <echo>Running the junit tests</echo>
    <junit fork="yes" printsummary="yes" haltonfailure="no" failureproperty="junit.tests.failed">
      <batchtest todir="${test.results.dir}" unless="test.class.name">
        <fileset dir="${junit.build.dir}" includes="**/*Test.class" excludes="**/Abstract*.class"/>
      </batchtest>
      <test todir="${test.results.dir}" name="${test.class.name}" if="test.class.name"/>
      <formatter type="plain" usefile="false"/>
      <formatter type="xml"/>
      <classpath refid="classpath" />
      <jvmarg value="-Djunit.base.dir=${basedir}/junit"/>
    </junit>
  </target>

  <target name="htmlunit" depends="build" description="Run htmlunit tests">
    <echo>Running the htmlunit tests</echo>
    <junit fork="yes" printsummary="yes" haltonfailure="no" failureproperty="htmlunit.tests.failed">
      <batchtest todir="${test.results.dir}" unless="test.class.name">
        <fileset dir="${htmlunit.build.dir}" includes="**/*Test.class" excludes="**/Abstract*.class"/>
      </batchtest>
      <formatter type="plain" usefile="false"/>
      <formatter type="xml"/>
      <classpath refid="classpath" />
      <jvmarg value="-Dhtmlunit.base.dir=${basedir}/htmlunit"/>
    </junit>
  </target>
  
  <target name="result" depends="junit, htmlunit">  
    <antcall target="archive-tests"/>
    <fail if="htmlunit.tests.failed" message="One or more tests failed."/>
    <fail if="junit.tests.failed" message="One or more tests failed."/>
  </target>
</project>
