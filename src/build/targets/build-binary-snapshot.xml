<?xml version="1.0"?>

<project name="build-binary-snapshot" default="bin-snapshot" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <target name="bin-snapshot" description="Create a binary snapshot" depends="init, webapp">
<!--
  <target name="bin-snapshot" description="Create a binary snapshot" depends="init, war">
-->
    <artifact:remoteRepository id="wyona.org.remote.repository" url="http://www.wyona.org/maven2/"/>

    <artifact:dependencies pathId="maven2.tomcat.classpath" filesetId="maven2.tomcat.fileset">
      <remoteRepository refid="wyona.org.remote.repository"/>
      <dependency groupId="apache-org" artifactId="apache-tomcat" version="${tomcat.version}" scope="provided"/>
    </artifact:dependencies>

    <delete dir="${build.dir}/bin-snapshots"/>
    <property name="snapshot.dir" value="${build.dir}/bin-snapshots/wyona-yanel-SNAPSHOT-${yanel.version}-r${yanel.revision}-bin"/>
    <mkdir dir="${snapshot.dir}"/>

    <!-- Unpack Tomcat -->
    <unzip dest="${snapshot.dir}">
      <fileset refid="maven2.tomcat.fileset"/>
    </unzip>
    <delete dir="${snapshot.dir}/META-INF"/>
    <chmod dir="${snapshot.dir}/apache-tomcat-${tomcat.version}/bin" perm="755" includes="*"/>
    <!-- TODO: Differentiate between Java 1.4 and higher (jmx.jar)! -->
    <copy file="${yanel.home.dir}/tools/apache-tomcat/java-1.4/apache-tomcat-5.5.20/bin/jmx.jar" todir="${snapshot.dir}/apache-tomcat-${tomcat.version}/bin"/>
    <copy file="${yanel.home.dir}/build/webapps/${servlet.context.prefix}/WEB-INF/lib/${xerces.impl.artifactId}-${xerces.impl.version}.jar" todir="${snapshot.dir}/apache-tomcat-${tomcat.version}/common/endorsed"/>
    <copy file="${yanel.home.dir}/build/webapps/${servlet.context.prefix}/WEB-INF/lib/${xml.apis.artifactId}-${xml.apis.version}.jar" todir="${snapshot.dir}/apache-tomcat-${tomcat.version}/common/endorsed"/>


    <!-- Build WAR file -->
    <copy todir="${snapshot.dir}/${servlet.context.prefix}">
      <fileset dir="${yanel.home.dir}/build/webapps/${servlet.context.prefix}"/>
    </copy>
    <copy todir="${snapshot.dir}/${servlet.context.prefix}/realms">
      <fileset dir="${yanel.home.dir}/src/realms"/>
    </copy>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/realms/javadoc/repository.xml" value="content">
      <replacetoken>../../../build/javadoc</replacetoken>
    </replace>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/realms/test/yanel/config/data-repository.xml" value="../data">
      <replacetoken>../../../../../local/test/data</replacetoken>
    </replace>
    <copy todir="${snapshot.dir}/${servlet.context.prefix}/realms/javadoc/content">
      <fileset dir="${yanel.home.dir}/build/javadoc"/>
    </copy>
    <copy file="${yanel.home.dir}/conf/realms.xml" todir="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes" overwrite="true"/>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/realms.xml" value="../../realms">
      <replacetoken>../src/realms</replacetoken>
    </replace>
    <copy todir="${snapshot.dir}/${servlet.context.prefix}/resources">
      <fileset dir="${yanel.home.dir}/src/resources"/>
    </copy>
    <copy todir="${snapshot.dir}/${servlet.context.prefix}/resources">
      <fileset dir="${yanel.home.dir}/src/contributions/resources"/>
    </copy>
    <copy todir="${snapshot.dir}/${servlet.context.prefix}/resources">
      <fileset dir="${yanel.home.dir}/src/realms/welcome-admin/yanel/resources"/>
    </copy>
    <xslt in="${yanel.home.dir}/conf/yanel.xml" out="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/yanel.properties" style="yanel2properties.xsl" force="true">
      <!--<param name="servlet.context.prefix" expression="${servlet.context.prefix}"/>-->
    </xslt>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/yanel.properties" value="../../resources">
      <replacetoken>../src/resources</replacetoken>
    </replace>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/yanel.properties" value="../../resources">
      <replacetoken>../src/contributions/resources</replacetoken>
    </replace>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/yanel.properties" value="../../resources">
      <replacetoken>../src/realms/welcome-admin/yanel/resources</replacetoken>
    </replace>

    <copy file="${yanel.home.dir}/src/binary-dist/log4j.properties" todir="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes" overwrite="true"/>
    <replace file="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/classes/log4j.properties" value="${servlet.context.prefix}">
      <replacetoken>@SERVLET_CONTEXT@</replacetoken>
    </replace>
    <mkdir dir="${snapshot.dir}/${servlet.context.prefix}/WEB-INF/logs"/>

    <jar jarfile="${snapshot.dir}/${servlet.context.prefix}.war" basedir="${snapshot.dir}/${servlet.context.prefix}"/>

    <delete dir="${snapshot.dir}/${servlet.context.prefix}"/>

    <move file="${snapshot.dir}/${servlet.context.prefix}.war" todir="${snapshot.dir}/apache-tomcat-${tomcat.version}/webapps"/>

    <copy file="${yanel.home.dir}/LICENSE.txt" todir="${snapshot.dir}"/>

    <!-- Copy Windows specific files -->
    <copy file="${yanel.home.dir}/src/binary-dist/README-WINDOWS.txt" tofile="${snapshot.dir}/README.txt"/>
    <copy file="${yanel.home.dir}/src/binary-dist/start.bat" todir="${snapshot.dir}"/>
    <copy file="${yanel.home.dir}/src/binary-dist/stop.bat" todir="${snapshot.dir}"/>

    <!-- Create ZIP file -->
    <zip destfile="${snapshot.dir}.zip">
      <zipfileset dir="${snapshot.dir}" prefix="wyona-yanel-SNAPSHOT-${yanel.version}-r${yanel.revision}-bin" filemode="755"/>
    </zip>

    <!-- Copy UNIX and Windows specific files -->
    <copy file="${yanel.home.dir}/src/binary-dist/README-UNIX.txt" tofile="${snapshot.dir}/README.txt" overwrite="true"/>
    <copy file="${yanel.home.dir}/src/binary-dist/start.sh" todir="${snapshot.dir}"/>
    <copy file="${yanel.home.dir}/src/binary-dist/stop.sh" todir="${snapshot.dir}"/>
    <delete file="${snapshot.dir}/start.bat"/>
    <delete file="${snapshot.dir}/stop.bat"/>

    <!-- Create TGZ file -->
    <tar destfile="${snapshot.dir}.tar">
      <tarfileset dir="${snapshot.dir}" prefix="wyona-yanel-SNAPSHOT-${yanel.version}-r${yanel.revision}-bin" mode="775"/>
    </tar>
    <gzip src="${snapshot.dir}.tar" destfile="${snapshot.dir}.tar.gz"/>
    <delete file="${snapshot.dir}.tar"/>
    <delete dir="${snapshot.dir}"/>
  </target>

</project>
