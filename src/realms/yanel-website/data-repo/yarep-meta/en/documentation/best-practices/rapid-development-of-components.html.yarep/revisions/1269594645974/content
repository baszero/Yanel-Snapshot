<?xml version="1.0"?><html xmlns="http://www.w3.org/1999/xhtml"><head>  <title>Rapid Development of Components</title>  <link rel="neutron-introspection" type="application/neutron+xml" href="?yanel.resource.usecase=introspection"/></head><body>
<div class="instructions">
<h1>Rapid Development of Components</h1>
<p>When developing Yanel components, often there is no need to compile everything. Two cases where this applies are <strong>webapp classes</strong> and <strong>resource classes</strong>.</p>
<h2>Efficiently building webapp classes</h2>
<p>Webapp classes are all classes that are under <code>{yanel.home}/src/webapp/src/java/org/wyona/yanel/servlet</code>. In order to build and test these classes efficiently, one can run:</p>
<pre>{yanel.home}/build.sh compile-webapp copy-basic-webapp-libs copy-webapp-files-to-tomcat-cluster-node1</pre>
<p>instead of running the whole build process. This will build only the webapp and redeploy it, and should reduce the waiting time from a couple of minutes to a couple of seconds.</p>
<h2>Efficiently building resource classes</h2>
<p>Resource classes are the classes that are found in separate directories under <code>{yanel.home}/src/contributions/resources</code>. These classes all have their own <code>build.xml</code> files, so to compile them efficiently, one can run the build as</p>
<pre>{yanel.home}/build.sh -f src/contributions/resources/{resource.dir.name}/build.xml</pre>
<p>instead of running the whole build process. Again, this will reduce the building time significantly, as only the changed resource will be built.</p>
<p>&#160;</p>
</div>
</body>
</html>