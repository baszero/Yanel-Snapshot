<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>Untitled document</title>
</head>
<body>
<h1>Setting up Yanel in the Eclipse IDE</h1>
<p>This document will get you started using Eclipse to develop/debug Yanel. To keep things simple and reliable, building and SVN access will be done outside of Eclipse. Also, it is assumed that you are using a unix-like shell for command line processing, if you are using the windows command line, replace the references to the shell scripts below with their aequivalent dos batch files (e.g. replace "build.sh" with "build.bat").</p>
<p>Depending on what you will be working on, you might need to import several projects into Eclipse. In this context, there are 3 types of projects: realms, resources, and Yanel itself.</p>
<h2>Importing a realm</h2>
<p>If you want to work on a realm that has a separate repository from the Yanel source, i.e. that is not one of the realms included with Yanel, follow these steps to  import it as a project into Eclipse:</p>
<ol>
<li>Check out Yanel and the external realm, and add the realm to Yanel by following <a href="../how-to-add-a-new-realm.html">this example</a>.</li>
<li>Build an Eclipse project using the specific "eclipse" target with the realm's build file:<br />
<pre>{path/to/yanel/root}/build.sh -f {path/to/realm/root}/build.xml eclipse</pre>
</li>
<li>In Eclipse, select <em>File -&gt; Import</em>, to open the Import  dialog.</li>
<li>Select <em>General -&gt; Existing Projects into Workspace</em>, then  click on <em>Next</em>.</li>
<li>Check <em>"Select root directory"</em>, click on <em>Browse</em>, and  select the realm's root directory (i.e. where build.xml is located)</li>
<li>Make sure the realm project is selected (should be the only one), <em>"Copy projects into workspace"</em> is <strong>not</strong> selected, and  click on <em>Finish</em>.</li>
</ol>
<p>The realm should now be visible as a project in the Package Explorer.</p>
<h2>Importing resource types<br /></h2>
<p>If you want to work on a specific resource type that is either a resource type of Yanel, or one belonging to another realm, follow these steps to  import it as a project into Eclipse:</p>
<ol>
<li>Follow point #1 above if you have not already done so. </li>
<li>Build an Eclipse project using the specific "eclipse" target with  the resource's build file:<br />
<pre>{path/to/yanel/root}/build.sh -f {path/to/realm/root}/build.xml eclipse</pre>
</li>
<li>In Eclipse, select <em>File -&gt; Import</em>, to open the Import  dialog.</li>
<li>Select <em>General -&gt; Existing Projects into Workspace</em>, then   click on <em>Next</em>.</li>
<li>Check <em>"Select root directory"</em>, click on <em>Browse</em>, and  select the realm's root directory (i.e. where build.xml is located)</li>
<li>Make sure the realm project is selected (should be the only one), <em>"Copy  projects into workspace"</em> is <strong>not</strong> selected, and  click on <em>Finish</em>.</li>
</ol>
<p>The realm should now be visible as a project in the Package Explorer.</p>
<h2></h2>
<h2>Importing Yanel<br /></h2>
<ol>
<li> Check out and build Yanel as <a href="http://yanel.org/download/source-repository.html">usual</a>.</li>
<li>Build an Eclipse project using the specific target "eclipse":<br />
<pre>{path/to/yanel/root}/build.sh eclipse</pre>
</li>
<li>In Eclipse, select <em>File -&gt; Import</em>, to open the Import dialog.</li>
<li>Select <em>General -&gt; Existing Projects into Workspace</em>, then click on <em>Next</em>.</li>
<li>Check <em>"Select root directory"</em>, click on <em>Browse</em>, and select the Yanel root directory (i.e. where build.sh is located)</li>
<li>Make sure the Yanel project is selected (should be the only one), <em>"Copy projects into workspace"</em> is <strong>not</strong> selected, and click on <em>Finish</em>.</li>
</ol> 
<ul>
</ul>
<p>The project "yanel" should now be visible in the Package Explorer.</p>
<h2>Debugging<br /></h2>
<ul>
</ul>
<p>To start debugging with Eclipse, start Tomcat in debug mode:</p>
<pre>{path/to/yanel/root}/local/apache-tomcat-5.5.20/bin/catalina.sh jpda start</pre>
<p>&#160;</p>
<p>&#160;</p>
<p>&#160;</p>
<p>&#160;</p>
<p>&#160;</p>
<ul>
</ul>
<ol> </ol> <dl> <dt>Project setup</dt> <dd>Create new Java Project in Eclipse workspace. Use the option "Create project from existing source".</dd> </dl> <dl> <dt>BUILD</dt> <dd>To build yanel, use ./build.sh in the console. Make sure Option "Build Automatically" is         turned off in Eclipse. alternative: one can also use the "run external tools" to build         inside eclipse. which is handy because you don't have to switch between shell and eclipse.         Go to the menu Run -&gt; External Tools -&gt; Open External Tools Dialog... click         "new Lanuch Configuration" to add a new launcher. In the main tab choose the build.xml of         your yanel. (e.g. ${workspace_loc:/yanel-projects/src/build/build.xml}). Choose the target         which you want to configure on the targets-tab. IMPORTANT: choose the target before you set         the ant-home (see: <a class="external" href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=143008#c6">https://bugs.eclipse.org/bugs/show_bug.cgi?id=143008#c6</a>).         On the classpath tab add the ant shipped with yanel as ant-home.</dd> </dl> <dl> <dt>CLASSPATH</dt> <dd> Add libraries to classpath of the project. The libraries are located in         $ECLIPSE_WORKSPACE$/yanel-trunk/local/apache-tomcat-5.5.20/webapps/yanel/WEB-INF/lib. Add         all libraries except the ones starting with yanel-*.</dd> </dl> <dl> <dt>CORRECT</dt> <dd> Eclipse import source wizzard mixes up something with src/resources/testing-times/src.         Remove this folder from build path and add src/resources/testing-times/src/java. Perform         project cleanup.</dd> </dl> <dl> <dt>DEBUG</dt> <dd> Use the Eclipse Tomcat Lanucher (http://www.eclipsetotale.com/tomcatPlugin.html) which         registers Tomcat process to Eclipse debugger.         <br /> To debug Resources of a project, set a breakpoint in a resource. Eclipse will not find the     source of the resource automatically. After it fails the first time you can use the button     displayed "attach source" and then attach the whole resource folder of a realm.
<p>also set in       the log4j.properties the ConsoleAppender insted of the RollingFileAppender</p>
<pre>    log4j.appender.A1=org.apache.log4j.ConsoleAppender <br />    #log4j.appender.A1 = org.apache.log4j.RollingFileAppender <br />    #log4j.appender.A1.File = /home/simon/src/yanel-projects/build/logs/log4j-cnode1.log<br />    </pre>
this way you can see the output     of the logging in the eclipse console. </dd> </dl> <dl> <dt>Other projects depending on Yanel</dt> <dd> To develop projects depending on yanel, like "Yanel contributions", add yanel-trunk as         project dependency to this project.</dd> </dl> <dl> <dt>For Windows user:</dt> <dd> The files should have LF as end character.          Menu: Window -&gt; Preferences -&gt; General -&gt; Workspace -&gt; New text file line delimiter. Set to "Unix". </dd> </dl>
</body>
</html>