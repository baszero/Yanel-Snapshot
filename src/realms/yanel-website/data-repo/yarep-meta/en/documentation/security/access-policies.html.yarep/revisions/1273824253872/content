<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>Access Control Policies</title>
</head>
<body>
<h1>Access Control Policies</h1>
<h2>Inheritance of policies or usecases</h2>
<p>One can block inherited policies for <strong>all</strong> usecases</p>
<p>&#160;</p>
<pre>&lt;?xml version="1.0"?&gt;<br /><br />&lt;policy xmlns="http://www.wyona.org/security/1.0" use-inherited-policies="false"&gt;<br /><br />  &lt;usecase id="view"&gt;<br />    &lt;!--&lt;world permission="false"/&gt;--&gt;<br />    &lt;user id="lenya" permission="true"/&gt;<br />  &lt;/usecase&gt;<br /><br />  &lt;usecase id="open"&gt;<br />    &lt;user id="lenya" permission="true"/&gt;<br />  &lt;/usecase&gt;<br /><br />  &lt;usecase id="write"&gt;<br />    &lt;user id="lenya" permission="true"/&gt;<br />  &lt;/usecase&gt;<br /><br />&lt;/policy&gt;<br /></pre>
<p>or also for a particular usecase</p>
<p>&#160;</p>
<pre>&lt;?xml version="1.0"?&gt;<br /><br />&lt;policy xmlns="http://www.wyona.org/security/1.0"&gt;<br /><br />  &lt;usecase id="view" use-inherited-policies="false"<br />    &lt;!--&lt;world permission="false"/&gt;--&gt;<br />    &lt;user id="lenya" permission="true"/&gt;<br />  &lt;/usecase&gt;<br /><br />&lt;/policy&gt;<br /></pre>
<h2>Default usecases</h2>
<p>The defaul usecases are currently hard-coded within <code>org.wyona.yanel.servlet.YanelServlet</code> and <code>org.wyona.security.impl.PolicyManagerImplVersion2</code></p>
<ul>
<li><strong>view:</strong> Allows to access the resource generated content</li>
<li><strong>yanel.resource.meta:</strong> Allows to access the meta data of resource (e.g. resource type)</li>
<li><strong>open:</strong> Allows to access the source content of a resource</li>
<li><strong>write:</strong> Allows to write/save data to the source content of a resource</li>
<li><strong>delete:</strong> Allows to delete a resource</li>
<li><strong>resource.create:</strong> Allows to create a resource</li>
<li><strong>toolbar:</strong> Allows to access the Yanel toolbar</li>
<li><strong>introspection:</strong> Allows to access the Neutron introspection of a resource</li>
<li><strong>policy.read:</strong> Allows to view the access policy of a resource</li>
<li><strong>policy.update:</strong> Allows to modify the access policy of a resource</li>
</ul>
<h2>Custom usecases</h2>
<p>For example workflow transitions!</p>
<h2>How it works</h2>
<p>The access control directory mimics the data directory. Each <code>file-or-dir-name.policy</code> file sets the rules for its namesake in the respective data directory. If the filename is the name of a directory, it defines the access for the corresponding directory, if it is the name of a single file, it defines the rules for this file only. Definitions for directories are inherited by all subdirectories, exceptions need to be defined at the corresponding level (see the following example). The root policy that is installed by default and defines the rules for the whole realm is called <code>.policy</code>, and is in the root folder of the policies (<code>realm-dir/ac-policies</code> by default).</p>
<h3>Example setup</h3>
<p>Here is an example that shows what needs to be done to block view acces to all parts of a website except a special page (useful for production websites "under construction"). We will assume that the page that we want to show is <code>realm-dir/data-repository/en/construction.html</code>.</p>
<ul>
<li>Leave the default policy open, i.e. in the file <code>.policy</code> in the root access control directory (<code>realm-dir/ac-policies/.policy</code> by default, defined in <code>realm-dir/config/ac-policies-repository.xml</code>), let everybody view everything:<br />
<pre>  &lt;usecase id="view"&gt;<br />    &lt;world permission="true"/&gt;<br />  &lt;/usecase&gt;</pre>
</li>
<li>Restrict viewing for everybody for the content (assuming it's all under <code>data-repository/en/</code>): create a policy file called <code>en.policy</code> and set<br />
<pre>  &lt;usecase id="view"&gt;<br />    &lt;world permission="false"/&gt;<br />  &lt;/usecase&gt;<br /></pre>
</li>
<li>Make a directory for the path of the file you want to show, and a policy file for it:<br />
<pre>mkdir realm-dir/ac-policies/en<br />vi realm-dir/ac-policies/en/construction.html.policy<br /></pre>
<p>and allow viewing:</p>
<pre>  &lt;usecase id="view"&gt;<br />    &lt;world permission="true"/&gt;<br />  &lt;/usecase&gt;</pre>
</li>
<li>You will also need to allow viewing for auxiliary files, like <code>*.css</code>. Assuming these can be found in the directory <code>realm-dir/data-repository/app</code>, create a file <code>realm-dir/ac-policies/en/app.policy</code> and set:<br />
<pre>  &lt;usecase id="view"&gt;<br />    &lt;world permission="true"/&gt;<br />  &lt;/usecase&gt;</pre>
</li>
</ul>
<p>Similarly, you can now allow access to the whole site for a group of registered users by setting</p>
<pre>  &lt;usecase id="view"&gt;<br />    &lt;group id="editors" permission="true"/&gt;<br />  &lt;/usecase&gt;</pre>
<p>for the previously closed parts of the realm.</p>
</body>
</html>