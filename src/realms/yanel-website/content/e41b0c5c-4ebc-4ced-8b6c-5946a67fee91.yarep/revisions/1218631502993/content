<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>BasicXMLResource</title>
    <link rel="neutron-introspection" type="application/neutron+xml" href="?yanel.resource.usecase=introspection"/>
  </head>
  <body>
    <h1>BasicXMLResource</h1>BasicXMLResource is a base class for resources that generate XML. you
    can extend this class if you want to develop a resource-type which will proceed xml.<br/>It
    already has implemented a bunch of nice thing which you could like. e.g. XSLT, <a
      href="i18n.html" shape="rect">i18n</a>, XInclude, ConfigurableViewDescriptor. <br/>At the
    moment folowing resource-types extending BasicXMLResource: xml, user-mgmt (via ExecutableUsecaseResource).<br/>
    <br/>
    <h2>Resource Configuration Properties:</h2>
    <tt>&lt;yanel:property name=&quot;i18n-catalogue&quot;
    value=&quot;VALUE&quot;/&gt;</tt> see: <a href="i18n.html">i18n</a>
    <br/>
    <tt>&lt;yanel:property name=&quot;xslt&quot; value=&quot;VALUE&quot;/&gt;</tt>
    <br/>
    <br/>
    <h3/>
    <h4/>
    <h5/>
    <h2> Custom Resource Configuration (ConfigurableViewDescriptor)</h2>
    <br/>
    <table>
      <tbody>
        <tr>
          <th>Element Name<br/>
          </th>
          <th>Child-Element</th>
          <th valign="top">Attribut</th>
          <th valign="top">Explanation</th>
        </tr>
        <tr>
          <td valign="top">views</td>
          <td valign="top">view</td>
          <td valign="top"/>
          <td valign="top">Container for all views</td>
        </tr>
        <tr>
          <td valign="top">view</td>
          <td valign="top">mime-type, xslt, serializer </td>
          <td valign="top">id<b/>
          </td>
          <td valign="top">A single view. Can be 'default' or 'source' for built in views. Or any
            other id for a custom view. A view is accessed through a request parameter <b>yanel.resource.viewid</b>
          </td>
        </tr>
        <tr>
          <td valign="top">mime-type</td>
          <td valign="top">-</td>
          <td valign="top"/>
          <td valign="top">E.g. text/html, application/xhtml+xml ...</td>
        </tr>
        <tr>
          <td valign="top">xslt</td>
          <td valign="top">-</td>
          <td valign="top"/>
          <td valign="top">Path to xslt. absolute data-repo path.</td>
        </tr>
        <tr>
          <td valign="top">serializer</td>
          <td valign="top">-</td>
          <td valign="top"/>
          <td valign="top">If no serializer is specified for a view, the serializer will be chosen
            depending on the mime-type, whereas the default serializer is XHTML_STRICT<br/>Possible
            Serializers:<br/><b>HTML_TRANSITIONAL, XHTML_STRICT, XML, TEXT</b></td>
        </tr>
      </tbody>
    </table>
    <br/>
    <h3>Example:</h3>
    <tt>&lt;yanel:custom-config&gt;<br/> &lt;views&gt;<br/> &lt;!-- No parameter
      needed for getting this view --&gt;<br/> &lt;view
      id=&quot;default&quot;&gt;<br/>
      &lt;mime-type&gt;text/html&lt;/mime-type&gt;<br/>
      &lt;xslt&gt;/xslt/global.xsl&lt;/xslt&gt;<br/> &lt;serializer
      key=&quot;HTML_TRANSITIONAL&quot;&gt;<br/> &lt;/serializer&gt;<br/> &lt;/view&gt;<br/>
      <br/> &lt;view id=&quot;beautiful&quot;&gt;<br/>
      &lt;mime-type&gt;application/xhtml+xml&lt;/mime-type&gt;<br/>
      &lt;xslt&gt;/xslt/global.xsl&lt;/xslt&gt;<br/> &lt;serializer
      key=&quot;XHTML_STRICT&quot;&gt;<br/> &lt;/serializer&gt;<br/> &lt;/view&gt;<br/>
      <br/> &lt;view id=&quot;atom&quot;&gt;<br/>
      &lt;mime-type&gt;application/atom+xml&lt;/mime-type&gt;<br/>
      &lt;serializer key=&quot;XML&quot;&gt;<br/> &lt;/serializer&gt;<br/> &lt;/view&gt;<br/>
      <br/> &lt;view id=&quot;json&quot;&gt;<br/>
      &lt;mime-type&gt;application/json&lt;/mime-type&gt;<br/> &lt;serializer
      key=&quot;TEXT&quot;&gt;<br/> &lt;/serializer&gt;<br/> &lt;/view&gt;<br/>
      <br/> &lt;!-- Skips any provided XSLT--&gt;<br/> &lt;view
      id=&quot;source&quot;&gt;<br/>
      &lt;mime-type&gt;application/xhtml+xml&lt;/mime-type&gt;<br/>
      &lt;serializer key=&quot;XML&quot;&gt;<br/> &lt;/serializer&gt;<br/> &lt;/view&gt;<br/>&lt;/views&gt;<br/>&lt;/yanel:custom-config&gt;</tt>
    <br/>
    <br/>
    <h2>XSLT</h2>
    <h3>Built-in XSLT-Parameter:</h3>
    <table>
      <tbody>
        <tr>
          <th valign="top">Property-name</th>
          <th valign="top">Explanation:</th>
        </tr>
        <tr>
          <td>yanel.path.name</td>
          <td>
            <br/>
          </td>
        </tr>
        <tr>
          <td>yanel.path</td>
          <td>Requested path<br/>
          </td>
        </tr>
        <tr>
          <td valign="top">yanel.back2context</td>
          <td valign="top">Path prefix for yanel root.<br/>
          </td>
        </tr>
        <tr>
          <td valign="top">yanel.globalHtdocsPath</td>
          <td valign="top">Path prefix for accessing content from globalHtocsPath.</td>
        </tr>
        <tr>
          <td valign="top">yanel.resourcesHtdocsPath</td>
          <td valign="top">Path prefix for accessing content of this resources HtdocsPath.</td>
        </tr>
        <tr>
          <td valign="top">yanel.back2realm</td>
          <td valign="top">Path prefix for realm root.<br/>
          </td>
        </tr>
        <tr>
          <td valign="top">yarep.back2realm<br/>
          </td>
          <td valign="top">(Deprecated) Same as: yanel.back2realm. For backwards compatibility only.<br/>
          </td>
        </tr>
        <tr>
          <td valign="top">os</td>
          <td valign="top">User-agent operating-system</td>
        </tr>
        <tr>
          <td valign="top">client</td>
          <td valign="top">User-agent (At the moment it just shows msie or firefox)</td>
        </tr>
        <tr>
          <td valign="top">language</td>
          <td valign="top">Requested Language</td>
        </tr>
        <tr>
          <td valign="top">content-language</td>
          <td valign="top">language of content</td>
        </tr>
        <tr>
          <td valign="top">username</td>
          <td valign="top">Username of the loged in user.</td>
        </tr>
        <tr>
          <td valign="top">yanel.reservedPrefix</td>
          <td valign="top">Reserved Prefix of yanel (ATM hardcoeded (yanel))</td>
        </tr>
        <tr>
          <td valign="top">yanel.toolbar-status</td>
          <td valign="top">on or off. status of tollbar.</td>
        </tr>
      </tbody>
    </table>
    <h3>Built-in Protocol-Schemas:</h3>
<!--     <table>
      <tbody>
        <tr>
          <th>Protocol</th>
          <th valign="top">Explanation</th>
          <th>Example</th>
          <th valign="top">Source</th>
        </tr>
        <tr>
          <td valign="top">http</td>
          <td valign="top">Accessing content proceeded by yanel as configured in the requested path
            resource config. <br/>
          </td>
          <td valign="top">http://.../yanel/myrealm/index.html</td>
          <td valign="top">rc-repo/index.html.yanel-rc <br/>
          </td>
        </tr>
        <tr>
          <td valign="top">yanelresource</td>
          <td valign="top">Accessing content proceeded by yanel as configured in the requested path
            resource config. Allows to bypass HTTP </td>
          <td valign="top">yanelresource:/index.html</td>
          <td valign="top">rc-repo/ index.html.yanel.rc</td>
        </tr>
        <tr>
          <td valign="top">yanelrepo</td>
          <td valign="top">Accessing content in data-repo of curent realm.<br/>
          </td>
          <td valign="top">yanelrepo:/index.html</td>
          <td valign="top"> data-repo/index.html</td>
        </tr>
        <tr>
          <td valign="top">yanelrepo:REALM_ID</td>
          <td valign="top">Accessing content in data-repo of realm test-realm.</td>
          <td valign="top">yanelrepo:test-realm:/index.html</td>
          <td valign="top"> data-repo/index.html</td>
        </tr>
        <tr>
          <td>yanelrepo:REALM_ID:REPO_ID<br/>
          </td>
          <td valign="top">Accessing content in repo with id test-repo of realm test-realm.</td>
          <td>yanelrepo:test-realm:test-repo:/index.html</td>
          <td valign="top">test-repo/index.html</td>
        </tr>
        <tr>
          <td valign="top"> rthtdocs</td>
          <td valign="top">Accessing resource-type specific content in the resource-types htdocs direcotry<br/>
          </td>
          <td valign="top"> rthtdocs:/foo/bar.xml</td>
          <td valign="top">resource-type/htdocs/foo/bar.xml</td>
        </tr>
        <tr>
          <td valign="top">rtyanelhtdocs</td>
          <td valign="top">Accessing yanel specific content in the resource-types yanel-htdocs direcotry</td>
          <td valign="top">rtyanelhtdocs:/foo/bar.xml</td>
          <td valign="top">resource-type/yanel-htdocs/foo/bar.xml</td>
        </tr>
      </tbody>
    </table> -->
    <p>At the moment only file, rthtdocs and data-repo are supported.</p>
         <table>
      <tbody>
        <tr>
          <th>Protocol</th>
          <th valign="top">Explanation</th>
          <th>Example</th>
          <th valign="top">Source</th>
        </tr>
        <tr>
          <td valign="top"></td>
          <td valign="top">Accessing content in data-repo of curent realm.<br/>
          </td>
          <td valign="top">/index.html</td>
          <td valign="top"> data-repo/index.html</td>
        </tr>
        <tr>
          <td valign="top"> rthtdocs</td>
          <td valign="top">Accessing resource-type specific content in the resource-types htdocs direcotry<br/>
          </td>
          <td valign="top"> rthtdocs:/foo/bar.xml</td>
          <td valign="top">resource-type/htdocs/foo/bar.xml</td>
        </tr>
        <tr>
          <td valign="top"> file</td>
          <td valign="top">Accessing a file within your system.<br/>
          </td>
          <td valign="top"> file:/home/foo/bar.xml</td>
          <td valign="top">/home/foo/bar.xml</td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
