/**
 * Licensed to Wyona
 */
package org.wyona.yanel.impl.resources.search;

import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;

import org.apache.log4j.Logger;

/**
 * Content handler for debugging document which has been generated by some parser implementation
 */
public class DebugContentHandler implements ContentHandler {

   private static Logger log = Logger.getLogger(DebugContentHandler.class);

   public void setDocumentLocator (Locator locator) { 
	  log.warn("Hello from setDocumentLocator()!"); 
	}

    public void startDocument ()
	throws SAXException  { 
	  log.warn("Hello from startDocument()!"); 
	}

    public void endDocument()
	throws SAXException {  
	  log.warn("Hello from endDocument()!"); 
	}

    public void startPrefixMapping (String prefix, String uri)
	throws SAXException {  
	  log.warn("Hello from startPrefixMapping()!"); 
	}

    public void endPrefixMapping (String prefix)
	throws SAXException  {  
	  log.warn("Hello from endPrefixMapping()!"); 
	}

    public void startElement (String uri, String localName,
			      String qName, Attributes atts)
	throws SAXException  {  
	  log.warn("Local name: " + localName); 
	}

    public void endElement (String uri, String localName,
			    String qName)
	throws SAXException {  
	  log.warn("Local name: " + localName); 
	}

    public void characters (char ch[], int start, int length)
	throws SAXException {  
	  log.warn("Hello from characters()!"); 
	}

    public void ignorableWhitespace (char ch[], int start, int length)
	throws SAXException {  
	  log.warn("Hello from ignorableWhitespace()!"); 
	}

    public void processingInstruction (String target, String data)
	throws SAXException {  
	  log.warn("Hello from processingInstruction()!"); 
	}

    public void skippedEntity (String name)
	throws SAXException {  
	  log.warn("Hello from skippedEntity()!"); 
	}
}
